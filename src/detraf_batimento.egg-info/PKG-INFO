Metadata-Version: 2.4
Name: detraf-batimento
Version: 2.0.0
Summary: Módulo para análise automática de batimento DETRAF com CDR
Author: SaperX / Kevyn Martins
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: typer>=0.12
Requires-Dist: python-dotenv>=1.0
Requires-Dist: PyMySQL>=1.1
Requires-Dist: rich>=13.7
Requires-Dist: PyYAML>=6.0

# detraf-batimento v2.0

Analisador automático do DETRAF com CDR focado em simplicidade: **setup do banco**, **coleta de dados (período, EOT, arquivo)** e **execução**.

## Instalação (modo desenvolvimento)
```bash
python3 -m venv .venv && source .venv/bin/activate
pip install -e .
```

## Configuração do Banco
```bash
# configura o banco (host, porta, user, senha, database)
detraf db-config

# valida a conexão (SELECT 1)
detraf db-check
```

## Configuração do Processo (período/EOT/arquivo)
```bash
# grava período (YYYYMM), EOT (3 dígitos) e caminho do arquivo DETRAF
detraf config
```

## Execução da Análise
```bash
# forma 1 (sem instalar nada):
./scripts/detraf run

# forma 2 (instalado no venv/ambiente):
detraf run

# ou peça para coletar/atualizar as variáveis durante a execução:
detraf run --config
```

## Replicação sem instalação (GitHub)
Para deixar o repositório totalmente portátil (sem pip no destino):

1) Gere a pasta `vendor/` com as dependências (apenas uma vez, em uma máquina com internet):
```bash
./scripts/build_vendor.sh
```
2) Confirme que `vendor/` foi criada e contém os pacotes (pymysql, typer, rich, pyyaml, dotenv).

3) Commite e envie ao GitHub (o `.gitignore` já evita logs e `configs/.env`):
```bash
git add -A
git commit -m "build: vendor libs e scripts de execução"
git push origin main  # ajuste o branch conforme seu fluxo
```

4) No servidor, apenas clone o repositório e rode:
```bash
./scripts/detraf config   # configura período/EOT/arquivo e banco
./scripts/detraf run
```
O launcher detecta `vendor/` e executa com `python -m detraf` sem instalar nada no sistema.

> **Nota:** Esta versão foca na **etapa inicial** (setup do banco + inicializador de dados). A importação do arquivo e etapas seguintes estão estruturadas para evolução rápida.


## Janela de cobrança por mês de referência
Ao informar `YYYYMM` (ex.: `202505`), o sistema calcula uma **janela de 3 meses** para o lado da operadora:
- Início: primeiro dia de (mês-2) às 00:00:00
- Fim: último dia do mês de referência às 23:59:59

Ex.: `202505` => janela `202503-01 00:00:00` até `2025-05-31 23:59:59`.
Essa janela é usada para classificar registros do arquivo da operadora em **conferido** (encontrado no CDR) ou **perdido** (não encontrado), e servirá para etapas futuras onde verificaremos o inverso (o que deveria ser cobrado e não foi).
